[project]
dependencies = [
  "alembic>=1.16.1",
  "fastapi>=0.115.12",
  "httpx>=0.28.1",
  "psycopg[binary]>=3.2.9",
  "pydantic-settings>=2.9.1",
  "sqlalchemy>=2.0.40",
  "uvicorn[standard]>=0.34.2",
]
description = "{{ cookiecutter.project_name }}"
name = "{{ cookiecutter.project_slug }}"
readme = "README.md"
requires-python = ">={{cookiecutter.python_version}}"
version = "0.1.0"

[dependency-groups]
dev = [
  "coverage>=7.9.1",
  "pre-commit>=4.2.0",
  "pyright>=1.1.401",
  "pytest>=8.4.0",
  "pytest-asyncio>=0.24.0",
  "pytest-cov>=6.2.1",
  "pytest-sugar>=1.0.0",
  "ruff>=0.11.9",
]

[tool.ruff] # https://docs.astral.sh/ruff/settings/#top-level
exclude = ["migrations", ".venv"]
line-length = 100

[tool.ruff.lint] # https://docs.astral.sh/ruff/settings/#lint
select = [
  "B", # flake8-bugbear
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
  "S", # bandit
  "W", # pycodestyle
  "UP", # pyupgrade
  "C4", # flake8-comprehensions
  "ANN", # flake8-annotations
  "TRY", # tryceratops
  "PERF", # perflint
  "ASYNC", # flake8-async
]

# Globally ignore noisy rules
ignore = [
  "E402", # module level import not at top of file
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "S101", # Allow use of assert statements in tests
  "S105", # hardcoded-password-string
  "S106", # hardcoded-password-func-arg
]

[tool.ruff.format] # https://docs.astral.sh/ruff/settings/#format
quote-style = "double"

[tool.coverage.run]
branch = true
omit = [
  "tests/*",
  ".venv/*",
]
source = ["app"]

[tool.coverage.report]
exclude_also = [
  "def __repr__",
  "if self\\.debug",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true

[tool.coverage.xml]
output = "coverage.xml"

[tool.coverage.html]
directory = "coverage_html_report"
show_contexts = true
title = "Coverage Report for {{ cookiecutter.project_name }}"

[tool.pytest.ini_options]
addopts = "-ra --strict-config --strict-markers --cov=app --cov-report=xml --cov-report=term-missing"
filterwarnings = ["error"]
markers = [
  "asyncio: marks tests as asyncio tests",
]
python_files = ["test_*.py"]
testpaths = ["tests"]
